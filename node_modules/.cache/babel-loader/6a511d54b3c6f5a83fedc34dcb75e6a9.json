{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user_1\\\\Desktop\\\\to-do-app-gh-pages\\\\src\\\\components\\\\task-list\\\\TaskList.js\";\nimport * as React from 'react';\nimport { HTTPService } from '../../service/http-service';\nimport { TaskListHeader } from './TaskListHeader';\nimport { List } from './List';\nimport { ListItem } from './L';\nimport { TaskListFooter } from './TaskListFooter';\nimport { FILTERS } from '../../utils/filters';\nimport './TaskList.scss';\nconst URL = 'https://evening-dawn-11092.herokuapp.com/list';\nconst LS_FILTER_KEY = 'FILTER';\nexport class TaskList extends React.Component {\n  constructor() {\n    super();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.updateItem = this.updateItem.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.httpService = new HTTPService();\n    const savedFilter = localStorage.getItem(LS_FILTER_KEY);\n    this.state = {\n      tasks: new Map(),\n      filter: savedFilter || FILTERS.ALL\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    console.log('Component wil unmount');\n  }\n\n  fetchData() {\n    this.httpService.get(URL, tasks => {\n      this.setState(oldState => {\n        const newState = Object.assign({}, oldState);\n        newState.tasks = tasks.reduce((tasksMap, task) => {\n          tasksMap.set(task.id, task);\n          return tasksMap;\n        }, new Map());\n        return newState;\n      });\n    });\n  }\n\n  onSubmit(newTask) {\n    this.httpService.post(URL, newTask, task => {\n      this.setState(oldState => {\n        const newState = Object.assign({}, oldState);\n        newState.tasks.set(task.id, task);\n        return newState;\n      });\n    });\n  }\n\n  deleteItem(id) {\n    this.httpService.delete(\"\".concat(URL, \"/\").concat(id), resp => {\n      this.setState(oldState => {\n        const newState = Object.assign({}, oldState);\n        newState.tasks.delete(id);\n        return newState;\n      });\n    });\n  }\n\n  updateItem(updatedTask) {\n    this.httpService.put(\"\".concat(URL, \"/\").concat(updatedTask.id), updatedTask, task => {\n      this.setState(oldState => {\n        const newState = Object.assign({}, oldState);\n        newState.tasks.set(task.id, task);\n        return newState;\n      });\n    });\n  }\n\n  setFilter(filter) {\n    localStorage.setItem(LS_FILTER_KEY, filter);\n    this.setState(oldState => Object.assign({}, oldState, {\n      filter\n    }));\n  }\n\n  render() {\n    const tasks = Array.from(this.state.tasks.values()).filter(item => {\n      switch (this.state.filter) {\n        case FILTERS.ACTIVE:\n          return !item.completed;\n\n        case FILTERS.COMPLETED:\n          return item.completed;\n\n        default:\n          return item;\n      }\n    });\n    const listItems = tasks.map((task, i) => {\n      return React.createElement(ListItem, {\n        title: task.title,\n        id: task.id,\n        key: i,\n        completed: task.completed,\n        onChange: this.updateItem,\n        onDeleteItem: this.deleteItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    });\n    const leftItemsCounter = tasks.filter(task => !task.completed).length;\n    return React.createElement(\"div\", {\n      className: \"task-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(TaskListHeader, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, listItems), React.createElement(TaskListFooter, {\n      counter: leftItemsCounter,\n      onFilterChange: this.setFilter,\n      activeFilter: this.state.filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\user_1\\Desktop\\to-do-app-gh-pages\\src\\components\\task-list\\TaskList.js"],"names":["React","HTTPService","TaskListHeader","List","ListItem","TaskListFooter","FILTERS","URL","LS_FILTER_KEY","TaskList","Component","constructor","onSubmit","bind","deleteItem","updateItem","setFilter","httpService","savedFilter","localStorage","getItem","state","tasks","Map","filter","ALL","componentDidMount","fetchData","componentWillUnmount","console","log","get","setState","oldState","newState","Object","assign","reduce","tasksMap","task","set","id","newTask","post","delete","resp","updatedTask","put","setItem","render","Array","from","values","item","ACTIVE","completed","COMPLETED","listItems","map","i","title","leftItemsCounter","length"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { HTTPService } from '../../service/http-service';\nimport { TaskListHeader } from './TaskListHeader';\nimport { List } from './List';\nimport { ListItem } from './L';\nimport { TaskListFooter } from './TaskListFooter';\nimport { FILTERS } from '../../utils/filters';\n\nimport './TaskList.scss';\n\nconst URL = 'https://evening-dawn-11092.herokuapp.com/list';\nconst LS_FILTER_KEY = 'FILTER';\nexport class TaskList extends React.Component {\n  constructor() {\n    super();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.updateItem = this.updateItem.bind(this);\n    this.setFilter = this.setFilter.bind(this);\n    this.httpService = new HTTPService();\n    const savedFilter = localStorage.getItem(LS_FILTER_KEY)\n    this.state = {\n      tasks: new Map(),\n      filter: savedFilter || FILTERS.ALL,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    console.log('Component wil unmount');\n  }\n\n  fetchData() {\n    this.httpService.get(URL, (tasks) => {\n      this.setState((oldState) => {\n        const newState = Object.assign({}, oldState);\n        newState.tasks = tasks.reduce((tasksMap, task) => {\n          tasksMap.set(task.id, task);\n          return tasksMap;\n        }, new Map());\n        return newState;\n      });\n    });\n  }\n\n  onSubmit(newTask) {\n    this.httpService.post(URL, newTask, (task) => {\n      this.setState((oldState) => {\n        const newState = Object.assign({}, oldState);\n        newState.tasks.set(task.id, task);\n        return newState;\n      });\n    });\n  }\n\n  deleteItem(id) {\n    this.httpService.delete(`${URL}/${id}`, (resp) => {\n      this.setState((oldState) => {\n        const newState = Object.assign({}, oldState);\n        newState.tasks.delete(id);\n        return newState;\n      });\n    })\n  }\n\n  updateItem(updatedTask) {\n    this.httpService.put(`${URL}/${updatedTask.id}`, updatedTask, (task) => {\n      this.setState(oldState => {\n        const newState = Object.assign({}, oldState);\n        newState.tasks.set(task.id, task)\n        return newState;\n      });\n    });\n  }\n\n  setFilter(filter) {\n    localStorage.setItem(LS_FILTER_KEY, filter);\n    this.setState((oldState) => Object.assign({}, oldState, { filter }))\n  }\n\n  render() {\n    const tasks = Array.from(this.state.tasks.values()).filter((item) => {\n      switch (this.state.filter) {\n        case FILTERS.ACTIVE:\n          return !item.completed;\n        case FILTERS.COMPLETED:\n          return item.completed;\n        default:\n          return item;\n      }\n    });\n    const listItems = tasks.map((task, i) => {\n      return <ListItem\n        title={task.title}\n        id={task.id}\n        key={i}\n        completed={task.completed}\n        onChange={this.updateItem}\n        onDeleteItem={this.deleteItem}\n      />\n    });\n    const leftItemsCounter = tasks.filter(task => !task.completed).length;\n\n    return <div className=\"task-list\">\n      <TaskListHeader onSubmit={this.onSubmit} />\n      <List>{listItems}</List>\n      <TaskListFooter counter={leftItemsCounter} onFilterChange={this.setFilter} activeFilter={this.state.filter}/>\n    </div>\n  }\n}"]},"metadata":{},"sourceType":"module"}